/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        List<List<Integer>> L=new ArrayList<>();
        if(root==null)
        return L;

        q.add(root);

        while(!q.isEmpty()){
            int size=q.size();
            List<Integer> tL=new ArrayList<>();
            
            for(int i=0;i<size;i++){
            TreeNode head=q.poll();
            tL.add(head.val);

            if(head.left!=null)
            q.add(head.left);

            if(head.right!=null)
            q.add(head.right);

            }
            L.add(tL);

        }
        return L;
    }
}
